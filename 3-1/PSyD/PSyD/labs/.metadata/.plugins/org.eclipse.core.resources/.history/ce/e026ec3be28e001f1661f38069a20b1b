
#include <s3c44b0x.h>
#include <s3cev40.h>
#include <rtc.h>

extern void isr_TICK_dummy( void );

void rtc_init( void )
{
    TICNT   = 0x01D7006C;
    RTCALM  = 0x01D70050;
    RTCRST  = 0x01D7006C;
        
    RTCCON  = 0x01D70040;
    
    BCDYEAR = 0x01D70088;
    BCDMON  = 0x01D70084;
    BCDDAY  = 0x01D7007C;
    BCDDATE = 0x01D70080;
    BCDHOUR = 0x01D70078;
    BCDMIN  = 0x01D70074;
    BCDSEC  = 0x01D70070;

    ALMYEAR = 0x01D70068;
    ALMMON  = 0x01D70064;
    ALMDAY  = 0x01D70060;
    ALMHOUR = 0x01D7005C;
    ALMMIN  = 0x01D70058;
    ALMSEC  = 0x01D70054;

    RTCCON &= ...;
}

void rtc_puttime( rtc_time_t *rtc_time )
{
    RTCCON |= ...;
    
    BCDYEAR = rtc_time->year;
    BCDMON  = rtc_time->mon;
    BCDDAY  = rtc_time->year;
    BCDDATE = rtc_time->wday;
    BCDHOUR = rtc_time->hour;
    BCDMIN  = rtc_time->min;
    BCDSEC  = rtc_time->sec;
        
    RTCCON &= ...;
}

void rtc_gettime( rtc_time_t *rtc_time )
{
    RTCCON |= ...;
    
    rtc_time->year = BCDYEAR;
    rtc_time->mon  = BCDMON;
    rtc_time->mday = ...;
    rtc_time->wday = ...;
    rtc_time->hour = BCDHOUR;
    rtc_time->min  = BCDMIN;
    rtc_time->sec  = BCDSEC;
    if( ! rtc_time->sec ){
        rtc_time->year = ...;
        rtc_time->mon  = ...;
        rtc_time->mday = ...;
        rtc_time->wday = ...;
        rtc_time->hour = ...;
        rtc_time->min  = ...;
        rtc_time->sec  = ...;
    };

    RTCCON &= ...;
}


void rtc_open( void (*isr)(void), uint8 tick_count )
{
    pISR_TICK = ...;
    I_ISPC    = ...;
    INTMSK   &= 0x3FFFFFF;
    TICNT     = 0x00;
}

void rtc_close( void )
{
    TICNT     = ...;  
    INTMSK   |= ...;    
    pISR_TICK = ...;
}
